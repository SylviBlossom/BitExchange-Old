plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Ladysnake Mods"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Technici4n"
		url = "https://raw.githubusercontent.com/Technici4n/Technici4n-maven/master/"
		content {
			includeGroup "dev.technici4n"
		}
	}
	maven {
		// saps.dev Maven (KubeJS and Rhino)
		url = "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
		}
	}
	maven {
		// IngredientExtensionAPI (Needed for KubeJS)
		url "https://maven.blamejared.com"
		content {
			includeGroup "com.faux.ingredientextension"
		}
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		url = "https://maven.cafeteria.dev/releases"
	}
	maven {
		name = "Patchouli"
		url = "https://maven.blamejared.com"
		content {
			includeGroup "vazkii.patchouli"
		}
	}
	maven {
		url = "https://jitpack.io"
		content {
			includeGroup "com.github.GabrielOlvH"
			includeGroup "com.github.Draylar"
			includeGroup "com.github.Draylar.omega-config"
			includeGroup "com.github.emilyploszaj"
		}
	}
	maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven {
		url = "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	implementation 'org.jetbrains:annotations:20.1.0'

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		mappings file("compat-mappings.tiny")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}")

	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

	modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly("maven.modrinth:modern-industrialization:${project.modern_industrialization_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Industrial revolution requirements
	/*modCompileOnly("curse.maven:indrev-391708:4020957") {
		exclude(group: "net.fabricmc.fabric-api")
	}*/
	modCompileOnly("me.steven:Industrial-Revolution:1.9.15-BETA") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly("com.github.GabrielOlvH:magna:0.5.2") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly("maven.modrinth:ae2:${project.ae2_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly("dev.latvian.mods:kubejs-fabric:${project.kubejs_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modCompileOnly("com.faux.ingredientextension:IngredientExtensionAPI-fabric-1.19.2:3.0.5") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modLocalRuntime("dev.latvian.mods:kubejs-fabric:${project.kubejs_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

loom {
	runs {
		client {
			client()
		}

		server {
			server()

			runDir "runServer"
		}

		// This adds a new gradle task that runs the datagen API: "gradlew runDatagenClient"
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${project.mod_id}"

			runDir "build/datagen"
		}
	}
}

// Add the datagenned files into the jar.
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}